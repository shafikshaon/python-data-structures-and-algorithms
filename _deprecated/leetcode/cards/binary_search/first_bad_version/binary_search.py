def display_array(nums, left, mid, right):
    result = ""
    for i in range(len(nums)):
        if i == left:
            result += f"   ║ left ({i + 1})  " + str(nums[i])
        if i == mid:
            result += f"   ║ mid ({i + 1})   " + str(nums[i])
        if i == right:
            result += f"   ║ right ({i + 1}) " + str(nums[i])
        if i in [left, mid, right]:
            continue
        else:
            result += f"   ║ ({i + 1})       " + str(nums[i])
    result += " ║"
    return result


def main(n: int, b: int) -> int:
    left = 1
    right = n

    while left < right:
        mid = (left + right) // 2
        print(f"Left: {left}, mid {mid}, right: {right}.")
        print(
            "   ____________________________________________________________________________________________________________________________________________"
        )
        print("" + display_array([i for i in range(1, n + 1)], left - 1, mid, right))
        print(
            "   --------------------------------------------------------------------------------------------------------------------------------------------"
        )
        if mid == b:
            right = mid
        else:
            left = mid + 1
    return left


print("Found at index: " + str(main(n=5, b=4)))
print(
    "-----------------------------------------------------------------------------------------------------"
)
print("Found at index: " + str(main(n=1, b=1)))

# Time complexity: O(log(n))
# Space complexity: O(1)

# Output
"""
Left: 1, mid 3, right: 5.
   ____________________________________________________________________________________________________________________________________________
   ║ left (1)  1   ║ (2)       2   ║ (3)       3   ║ mid (4)   4   ║ (5)       5 ║
   --------------------------------------------------------------------------------------------------------------------------------------------
Left: 4, mid 4, right: 5.
   ____________________________________________________________________________________________________________________________________________
   ║ (1)       1   ║ (2)       2   ║ (3)       3   ║ left (4)  4   ║ mid (5)   5 ║
   --------------------------------------------------------------------------------------------------------------------------------------------
Found at index: 4
-----------------------------------------------------------------------------------------------------
Found at index: 1
"""
